[{"doc":"This page has not yet sprouted","title":"This page has not yet sprouted","hpath":"403","content":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","url":"https://ydennisy.github.io/digital-garden/notes/403.html","relUrl":"notes/403.html"},{"doc":"Root","title":"Root","hpath":"root","content":"\n# Digital Garden\n\n**Welcome to the digital garden of Dennis Yurkevich.**\n\n> The phrase \"digital garden\" is a metaphor for thinking about writing and creating that focuses less on the resulting \"showpiece\" and more on the process, care, and craft it takes to get there. -- [Joel Hooks](https://joelhooks.com/digital-garden)\n","url":"https://ydennisy.github.io/digital-garden","relUrl":"/"},{"doc":"Quantum Mechanics","title":"Quantum Mechanics","hpath":"qm","content":"\n# Quantum Mechanics\n\n> Classical physics is a good approximation.\n\nIs it possible to learn Quantum Mechanics without a proper grasp of mathematics or classical mechanics, is it possible to jump in at what most would consider the \"deep-end\"? Intuitively we would say no, learning has always been designed in a linear trajectory, start simple and increase complexity in a specific order. This is an attempt to skip the \"correct\" order mainly due to the constrain of time.\n\n## Learning Method\n\nThe idea is to attempt to take the shortest path to level which could be described as an understanding of QM. Having attempted to start by reading books for non-physicists the issue is that there are too many concepts often introduced in too short a period of time; waves, particles, energies, measurements, state vectors etc it quickly starts to feel insurmountable. An idea I would like to explore is how to learn the most fundamental aspects, in the simplest case; the 1-D, one electron, or whatever other simplications we can make to the problem space.\n\nLearning is always best by doing, taking notes and writing in general is a good start, but building experiments or software is even better. A secondary goal will be to try and represent the learnings through a software package, which can represent an interactive simulation.\n\nOne other (possible) benefit of being uneducated in classical physics is that we can try and skip some of the intuitions that this would place upon trying to understand QM. If we look at the concept of [wave particle duality](https://en.wikipedia.org/wiki/Wave%E2%80%93particle_duality), we can be confused right away, is an electron a wave or a particle? The universe is not wavering between the two, unable to make up it's mind, it is therefore important to leave these intuitions behind and and accept the electron for whom he/she truly is!\n\n## Topics\n\n[[qm.linearity]]","url":"https://ydennisy.github.io/digital-garden/notes/1497dd54-83c0-4be1-9fa2-98433bbdb94b.html","relUrl":"notes/1497dd54-83c0-4be1-9fa2-98433bbdb94b.html"},{"doc":"Linearity","title":"Linearity","hpath":"qm.linearity","content":"\n# Linearity\n\n**Quantum mechanics is linear, while classic mechanics can be non-linear.**\n\nQM has the property of **linearity**, similarly to Maxwell's theory of electromagnetism. This implies that if we have a solution, for example for Maxwell's equations which is:\n\n$$\n(E, B, \\rho, J)\n$$\n\nThen we can multiply by a real valued constant $\\alpha \\in \\R$, to get:\n\n$$\n(\\alpha E, \\alpha B, \\alpha\\rho, \\alphaJ)\n$$\n\nWhich will also be a solution. Linearity also implies that if we have two solutions:\n\n$$\n(E_1, B_1, \\rho_1, J_1) and (E_2, B_2, \\rho_2, J_2)\n$$\n\nThen the **sum** of the two solutions is also a valid solution:\n\n$$\n(E_1 + E_2, B_1 + B_2, \\rho_1 + \\rho_2, J_1 + J_2)\n$$\n\nThis new solution can actually be called the **superposition** of the two original solutions. This also means that for a single equation / theory there are many solutions and is related to how a translantic cable can pass millions of simulatneous data streams, without them interferring with each other. \n\n## The general case\n\nIn the following equation\n\n$$\nLu = 0\n$$\n\nWe have $L$ which is the **linear operator** and $u$ which represents an **unknown**, this could be a number or function of time, space or even many of both.\n\nThe linear operator is an object which satisfies the following two properties from the example above\n\n$$\nL(u_1 + u_2) = Lu_1 + Lu_2, L(au) = aLu,\n$$\n\nwhere $a$ is a number. The two conditions imply they can be combined\n\n$$\nL(\\alpha u_1 _ \\beta u_2) = \\alpha L u_1 + \\beta L u_2\n$$\n","url":"https://ydennisy.github.io/digital-garden/notes/cb948322-0cc9-47d9-b0f5-a4b23b8248de.html","relUrl":"notes/cb948322-0cc9-47d9-b0f5-a4b23b8248de.html"},{"doc":"Ml","title":"Ml","hpath":"ml","content":"\n","url":"https://ydennisy.github.io/digital-garden/notes/401a6fbc-4335-4bc4-a313-785174a8f6c8.html","relUrl":"notes/401a6fbc-4335-4bc4-a313-785174a8f6c8.html"},{"doc":"Tf","title":"Tf","hpath":"ml.tf","content":"\n","url":"https://ydennisy.github.io/digital-garden/notes/96717466-e8a7-41d6-b4f4-a1dcc28c1ac6.html","relUrl":"notes/96717466-e8a7-41d6-b4f4-a1dcc28c1ac6.html"},{"doc":"Tensorboard","title":"Tensorboard","hpath":"ml.tf.tensorboard","content":"\n# TensorBoard\n\nTensorboard does not render direct in Google AI Notebooks, a simple workaround is to SSH into the machine from your local, this involves two steps.\n\n1. Run TensorBoard on the VM:\n```\n$ tensorboard --port=7000 --logdir logs\n```\n\n2. SSH into the machine:\n```\n$ gcloud beta compute ssh --zone \"{your zone}\" \"{your instance name}\" --project \"{your project name}\" -- -L 7000:localhost:7000\n```\n\nYou can not access the TensorBoard UI from your own machine on `localhost:7000`","url":"https://ydennisy.github.io/digital-garden/notes/5f6c1202-1572-484b-b397-02e2b81aa5ad.html","relUrl":"notes/5f6c1202-1572-484b-b397-02e2b81aa5ad.html"},{"doc":"Optimisation","title":"Optimisation","hpath":"ml.tf.optimisation","content":"\nWhere does these magic optimization flags come from?\nhttps://github.com/NVIDIA/DeepLearningExamples/issues/57\n","url":"https://ydennisy.github.io/digital-garden/notes/d87a09d4-0672-4f21-af9d-ef387fe8c70b.html","relUrl":"notes/d87a09d4-0672-4f21-af9d-ef387fe8c70b.html"},{"doc":"Papers","title":"Papers","hpath":"ml.papers","content":"# ML Papers\n\n## Ads:\n[Estimating Conversion Rate in Display Advertising from Past Performance Data](http://www0.cs.ucl.ac.uk/staff/w.zhang/rtb-papers/cvr-est.pdf)\n\nhttps://github.com/tensorflow/ranking\nhttps://www.vidsaga.com/how-to-make-videos-like-khan-academy/\nhttp://bendersky.github.io/res/TF-Ranking-ICTIR-2019.pdf\nhttps://www.microsoft.com/en-us/research/project/mslr/\nhttps://arxiv.org/pdf/1904.12848.pdf\nhttps://sebastianraschka.com/faq/docs/logisticregr-neuralnet.html\nhttps://pimbook.org/pdf/pim_first_pages.pdf\nhttps://www.google.com/search?q=linear+algebra+practice+workbook+pdf&oq=linear+algebra+practice+workbook+pdf&aqs=chrome..69i57.10762j1j7&sourceid=chrome&ie=UTF-8\nhttps://www.coursera.org/lecture/machine-learning/advanced-optimization-licwf","url":"https://ydennisy.github.io/digital-garden/notes/67e7743f-5c1a-486c-b7f5-9d4ebdbfe772.html","relUrl":"notes/67e7743f-5c1a-486c-b7f5-9d4ebdbfe772.html"},{"doc":"Pandas","title":"Pandas","hpath":"ml.pandas","content":"\n# Pandas\n\n\n## Columns\n\nDrop columns\n\n```python\ndf = df.drop(columns=['a', 'b'])\n```\n\nRename columns\n\n```python\ndf = df.rename(columns={'a': 'b'})\n```\n\nDrop duplicates\n\n```python\ndf = df.drop_duplicates(subset=['col_name'])\n```\n\nCheck types\n\n```python\ndf.dtypes\n```\n\n## Disk i/o\n\nParquet, uses `pyarrow` which is based on a C++ lib, and is therefore not bound by the python GIL.\n\n## Shuffle\n\nShuffle rows in place:\n\n```python\ndf = df.sample(frac=1).reset_index(drop=True)\n```\n","url":"https://ydennisy.github.io/digital-garden/notes/bcc9ff56-163e-4fdc-baa2-753014a41d78.html","relUrl":"notes/bcc9ff56-163e-4fdc-baa2-753014a41d78.html"},{"doc":"Ops","title":"Ops","hpath":"ml.ops","content":"\n# ML Ops\n\nhttps://www.reddit.com/r/MachineLearning/comments/lbrhvl/d_how_to_organise_large_machine_learning_projects/\nhttps://www.reddit.com/r/datascience/comments/lbrj6i/how_to_organise_large_machine_learning_projects/\n\nhttps://drivendata.github.io/cookiecutter-data-science/\nhttps://towardsdatascience.com/reproducible-experiments-with-jupyter-notebooks-and-guild-ai-3bd3c0d84456\nhttps://guild.ai/\n\nhttps://dvc.org/\nhttps://activeloop.ai","url":"https://ydennisy.github.io/digital-garden/notes/10d4e0cb-33fe-49f5-904b-910e67444998.html","relUrl":"notes/10d4e0cb-33fe-49f5-904b-910e67444998.html"},{"doc":"Math","title":"Math","hpath":"math","content":"\n","url":"https://ydennisy.github.io/digital-garden/notes/ca74417f-f907-4960-bc65-2d5cd1a32b49.html","relUrl":"notes/ca74417f-f907-4960-bc65-2d5cd1a32b49.html"},{"doc":"Polynomials","title":"Polynomials","hpath":"math.polynomials","content":"\n# Polynomials\n\n#### Definition\n\nA single variable polynomial with real coefficients is a function $f$ that takes a real number as input and produces a real number as output and has the form\n\n```math\nf(x) = a_0 + a_1x + a_2x^2 + ... + a_nx^n\n```\n\nwhere $a_i$ are real numbers. The $a_i$ are called _coefficients_ of $f$. The _degree_ of the polynomial is the integer $n$.\n\nSyntax:\n\n- a polynomial with real coefficients (the function $f$).\n- coefficients (the numbers $a_i$).\n- a polynomial's degree (the integer $n$).\n\nExample:\n\n```math\ng(t) = 2 + 0t + 4t^2 + (-1)t^3\n```\n\nWhich can be written as\n\n```math\ng(t) = 2 + 4t^2 - t^3\n```\n\nAnd can be evaluated for $t = 3$\n\n```math\ng(3) = 2 + 4(3^2) - 3^3 = 11\n```\n\nInteresting ways to think about polynomials:\n- a polynomial as with any function can be represented as a set of pairs called _points_. That is if you take each input $t$ and pair it with its output $f(t)$ you get a set of tuples $(t, f(t))$, which can be analysed from the perspective of set theory.\n- a polynomial's graph can be plotted as a curve in space, so that the horizontal direction represents the input and the vertical the output.\n- using the curves they \"carve out\" we can regard a polynomial as a geometric object, with properties like \"curvature\" and \"smoothness\".\n- any logical condition can be expressed as a combination of polynomials if we restrict their inpot to $1$ or $0$:\n\n```math\nAND(x,y) = xy \\\\\nNOT(x) = 1 - x \\\\\nOR(x,y) = 1 - (1-x)(1-y)\n```\n","url":"https://ydennisy.github.io/digital-garden/notes/fb74c8b5-7584-4d20-b5c2-1445e527f9a7.html","relUrl":"notes/fb74c8b5-7584-4d20-b5c2-1445e527f9a7.html"},{"doc":"Cs","title":"Cs","hpath":"cs","content":"\n","url":"https://ydennisy.github.io/digital-garden/notes/088bf15c-8a59-4793-b384-17ffc4b1419c.html","relUrl":"notes/088bf15c-8a59-4793-b384-17ffc4b1419c.html"},{"doc":"Testing","title":"Testing","hpath":"cs.testing","content":"\n","url":"https://ydennisy.github.io/digital-garden/notes/f565d6e5-42b2-409c-807d-dabb1801e51f.html","relUrl":"notes/f565d6e5-42b2-409c-807d-dabb1801e51f.html"},{"doc":"Playwright","title":"Playwright","hpath":"cs.testing.playwright","content":"\n# Playwright\n\n## Debug in VSCode\n\nA productive debugging approach is to use the node debugger within VS Code. To set this up, we first need to add the following `launch.json` file in a `.vscode` folder:\n\n```json\n{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"Debug Jest Tests\",\n      \"type\": \"node\",\n      \"request\": \"launch\",\n      \"program\": \"${workspaceFolder}/node_modules/.bin/jest\",\n      \"args\": [\"--runInBand\"],\n      \"windows\": {\n        \"program\": \"${workspaceFolder}/node_modules/jest/bin/jest\"\n      },\n      \"console\": \"integratedTerminal\",\n      \"internalConsoleOptions\": \"neverOpen\"\n    }\n  ]\n}\n```\nWe have called our launch configuration Debug Jest Tests and we are simply telling the node process to execute Jest. We can also change the config to run in `headless: false` mode:\n\n```js\nmodule.exports = {\n  testEnvironmentOptions: {\n    'jest-playwright': {\n      browsers: ['chromium', 'firefox', 'webkit',\n      launchOptions: {\n        headless: false, // this is the change!\n      },\n    },\n  },\n};\n```\n\nYou can now open the `Run` section in the left hand panel and execute your `jest` tests, setting breakpoints etc as you would in the browser console.\n\nVoila!\n","url":"https://ydennisy.github.io/digital-garden/notes/b73caa67-93a4-4fef-bd84-6dd02778417a.html","relUrl":"notes/b73caa67-93a4-4fef-bd84-6dd02778417a.html"},{"doc":"Python","title":"Python","hpath":"cs.python","content":"\n","url":"https://ydennisy.github.io/digital-garden/notes/69acaadf-713a-42d2-bccf-ea102ac7c88f.html","relUrl":"notes/69acaadf-713a-42d2-bccf-ea102ac7c88f.html"},{"doc":"Files","title":"Files","hpath":"cs.python.files","content":"\n```python\nimport glob\n\nglob.glob('folder/*.txt') # returns a list of files\n```\n","url":"https://ydennisy.github.io/digital-garden/notes/3b7e3453-7886-484c-bebb-fd3503b4aba7.html","relUrl":"notes/3b7e3453-7886-484c-bebb-fd3503b4aba7.html"},{"doc":"Gcp","title":"Gcp","hpath":"cs.gcp","content":"\n","url":"https://ydennisy.github.io/digital-garden/notes/4f490531-8434-4d2f-b9f0-a29918a010ae.html","relUrl":"notes/4f490531-8434-4d2f-b9f0-a29918a010ae.html"},{"doc":"Vms","title":"Vms","hpath":"cs.gcp.vms","content":"\n# GCP VMs\n\n## SSH\n\nYou can `ssh` into an AI notebook VM, just like any other, and we can forward the port to view the notebooks locally:\n\n```bash\nexport PROJECT_ID=\"PROJECT_ID\"\nexport ZONE=\"ZONE\"\nexport INSTANCE_NAME=\"INSTANCE_NAME\"\n\ngcloud compute ssh \\\n    --project $PROJECT_ID \\\n    --zone $ZONE \\\n    $INSTANCE_NAME -- -L 8080:localhost:8080\n```\n\nVery similar to how to access a TensorBoard running on the VM: [[ml.tf.tensorboard]]","url":"https://ydennisy.github.io/digital-garden/notes/26ed9307-c898-430d-8f9b-2dbdf6930798.html","relUrl":"notes/26ed9307-c898-430d-8f9b-2dbdf6930798.html"},{"doc":"Bigquery","title":"Bigquery","hpath":"cs.gcp.bigquery","content":"\n# BigQuery\n\nTo find the size of all tables within a dataset\n\n```sql\nSELECT\n  table_id,\n  SUM(size_bytes)/(1024*1024*1024) AS size_GB\nFROM\n  datasetname.__TABLES__\nGROUP BY\n  table_id\nORDER BY\n  size_GB DESC;\n```","url":"https://ydennisy.github.io/digital-garden/notes/db6c51b5-6028-4b8e-a128-b2ca4116574e.html","relUrl":"notes/db6c51b5-6028-4b8e-a128-b2ca4116574e.html"},{"doc":"CLI","title":"CLI","hpath":"cs.cli","content":"\n# CLI Commands\n\nList files with sizes in a directory\n\n```bash\n# Specify MBs (10^6 bytes)\n$ ls -l --block-size=MB\n\n# Human readable sizes\n$ ls -lh\n```\n\nDelete a directory\n\n```bash\n# -r deletes everything inside `recursively`\n$ rm -r DIR_NAME\n```\n\nKeep program running when SSH closed\n\n```bash\n$ screen\n# Now run your long lived command\n# When returning, to access the same process:\n$ screen -r\n```","url":"https://ydennisy.github.io/digital-garden/notes/e1270b08-3e4d-4724-af7d-53ef73a3b614.html","relUrl":"notes/e1270b08-3e4d-4724-af7d-53ef73a3b614.html"}]
